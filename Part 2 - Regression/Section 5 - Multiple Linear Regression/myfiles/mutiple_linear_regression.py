#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri May 11 11:53:47 2018

@author: dlog
"""

# Using multiple linear regression we build a model to check which circumastances made startups more profitable.
# Independent variables are: R&D costs ($), administration costs ($), marketing costs ($), geographical area.
# The dependent variable is profit ($) of the startup company.

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


#####################################################################
# import and split data
#####################################################################
dataset = pd.read_csv('../50_Startups.csv')
X = dataset.iloc[:,0:4].values # independent vars
Y = dataset.iloc[:,4].values # dependent vars


#####################################################################
# Encoding categorical vars (strings into integers)
#####################################################################
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_X = LabelEncoder()
X[:,3] = labelencoder_X.fit_transform(X[:,3]) # the integer encoding will be assigned in alphabetical order
onehotencoder = OneHotEncoder(categorical_features = [3])
X = onehotencoder.fit_transform(X).toarray() # transform integer encoded rows to individual columns 
# There were 3 categorical vars, let's remove 1 of them to fit into multiple linear regression
X = X[:,1:] # remove column in index 0


#####################################################################
# Splitting data to training and test sets
#####################################################################
from sklearn.cross_validation import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0) # the split in X and Y is done on corresponding index values


#####################################################################
# fit multiple linear regression model to training set
#####################################################################
from sklearn.linear_model import LinearRegression
regressor = LinearRegression() 
regressor.fit(X_train, Y_train)


#####################################################################
# predict test set results
#####################################################################
Y_pred = regressor.predict(X_test)

# There is a good relationship between the independent vars (various costs and location) and the 
# profit generated by a startup. 




